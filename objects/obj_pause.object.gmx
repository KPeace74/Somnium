<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fill</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>obj_spawner</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum screenStates {
    FULLSCREEN,
    WINDOWED,
    BORDERLESS
}

enum pauseScreens {
    MAIN,
    SCREENS,
    CONTROLS,
    AUDIO
}

global.screen = screenStates.FULLSCREEN
global.pauseScreen = pauseScreens.MAIN
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room != rmLoadScreen) {
    if (keyboard_check_pressed(vk_escape) &amp;&amp; global.inLevel) {
        global.pause = !global.pause
        if (global.pause) {
            continueButton = instance_create(view_xview + view_wview/2, view_yview + view_hview/2 - 100, oPauseButton)
            with (continueButton) {
                button = 0
            }
            screenButton = instance_create(view_xview + view_wview/2, view_yview + view_hview/2, oPauseButton)
            with (screenButton) {
                button = 1
            }
            controlButton = instance_create(view_xview + view_wview/2, view_yview + view_hview/2 + 100, oPauseButton)
            with (controlButton) {
                button = 2
            }
            audioButton = instance_create(view_xview + view_wview/2, view_yview + view_hview/2 + 200, oPauseButton)
            with (audioButton) {
                button = 3
            }
            quitButton = instance_create(view_xview + view_wview/2, view_yview + view_hview/2 + 300, oPauseButton)
            with (quitButton) {
                button = 4
            }
        }
    }
    if (global.pause &amp;&amp; keyboard_check_pressed(vk_enter)) {
        game_end()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) {
    draw_set_halign(fa_center)
    draw_set_font(fnt_large_fixedsys)
    draw_set_alpha(0.3)
    draw_set_color(c_black)
    draw_rectangle(0, 0, window_get_width(), window_get_height(), false)
    draw_set_alpha(1)
    draw_sprite(sprPauseMenu, 0, view_wview/2, view_hview/2)
    if (global.pauseScreen == pauseScreens.MAIN) {
        draw_sprite(sprContinue, continueButton.image_index, view_wview/2, view_hview/2 - 100)
        draw_sprite(sprScreen, screenButton.image_index, view_wview/2, view_hview/2)
        draw_sprite(sprControls, controlButton.image_index, view_wview/2, view_hview/2 + 100)
        draw_sprite(sprAudio, audioButton.image_index, view_wview/2, view_hview/2 + 200)
        draw_sprite(sprQuit, quitButton.image_index, view_wview/2, view_hview/2 + 300)
    }
    draw_set_halign(fa_left)
    /*
    draw_set_alpha(1)
    draw_roundrect(95, 195, view_wview - 95, view_hview - 195, false)
    draw_set_color(c_white)
    draw_roundrect(100, 200, view_wview - 100, view_hview - 200, false)
    draw_set_color(c_black)
    draw_text_transformed(view_wview/2, 210, "Game Paused", 1, 1, 0)
    draw_set_font(fnt_fixedsys)
    */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
