<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = global.gameGravity
vsp = 0
hsp = 0
image_speed = 1/35
closeTo = false
xPos = x
yPos = y
personTalking = "Jeffrey"
name = "Jeffrey"
chatSequence = 0
chatNumber = 1
move = 0
movespeed = 0
accelerationspeed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) {
image_speed = 0
exit
}

gravityScript(0.4)
collision(obj_solid)

if (distance_to_object(obj_player) &lt;= 32) {
    closeTo = true
} else {
    closeTo = false
}

if (global.pause) {
    image_speed = 0
} else {
    image_speed = 1/35
}

if (keyboard_check_pressed(ord("E")) &amp;&amp; closeTo &amp;&amp; !global.inChat) {
    global.inChat = true
}

if (keyboard_check_pressed(ord("E")) &amp;&amp; global.inChat) {
    if (!global.inGUI) {
        if (chatText[chatSequence, chatNumber + 2] != "") {
            chatNumber++
        } else {
            global.inChat = false
            chatNumber = 0
            xPos = x
            yPos = y
        }
    }
}

if (chatNumber % 2 != 0) {
    if (chatText[chatSequence, chatNumber] != obj_player) {
        xPos = instance_nearest(0, 0, chatText[chatSequence, chatNumber]).x
        yPos = instance_nearest(0, 0, chatText[chatSequence, chatNumber]).y
        personTalking = instance_nearest(0, 0, chatText[chatSequence, chatNumber]).name
    } else if (global.chatText[chatSequence, chatNumber] == obj_player) {
        xPos = instance_nearest(x, y, obj_player).x
        yPos = instance_nearest(x, y, obj_player).y
        personTalking = "You"
    }
    chatNumber++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
if (closeTo &amp;&amp; !global.inChat) {
    draw_set_alpha(1)
    draw_set_font(fnt_old)
    draw_set_color(c_black)
    draw_roundrect((x - (string_width("Press SPACE to Talk")/4) + 8) - 3, (y - 125), (x + (string_width("Press SPACE to Talk")/4) - 8) + 3, (y - 89), false)
    draw_set_color(c_white)
    draw_roundrect((x - (string_width("Press SPACE to Talk")/4) + 8), (y - 122), (x + (string_width("Press SPACE to Talk")/4) - 8), (y - 92), false)
    draw_set_color(c_black)
    draw_set_alpha(1)
    draw_set_halign(fa_center)
    draw_text_transformed(x, y - 120, "Press E to Talk", 1/2, 1/2, 0)
}

if (global.inChat) {
    draw_set_color(c_white)
    draw_set_alpha(1)
    draw_set_font(fnt_old)
    draw_set_halign(fa_center)
    draw_set_color(c_black)
    if ((ceil((string_width(chatText[chatSequence, chatNumber]))/490)) &gt; 1) {
        draw_roundrect(xPos - 125 - 3, yPos - 95 - (ceil((string_width(chatText[chatSequence, chatNumber]))/490) * 25) - 3, xPos + 125 + 3, (yPos - 89), false)
    } else {
        draw_roundrect((xPos - (string_width(chatText[chatSequence, chatNumber])/4) - 8) - 3, yPos - 95 - (ceil((string_width(chatText[chatSequence, chatNumber]))/490) * 25) - 3, (xPos + (string_width(chatText[chatSequence, chatNumber])/4) + 8) + 3, (yPos - 89), false)
    }
    //Drawing the Rectangle Around the Person Talking's Name
    draw_roundrect(xPos - (string_width(personTalking)*0.35/2) - 13, yPos - 95 - (ceil((string_width(chatText[chatSequence, chatNumber]))/490) * 25), xPos + (string_width(personTalking)*0.35/2) + 13, yPos - 95 - (ceil((string_width(chatText[chatSequence, chatNumber]))/490) * 25) - 20, false)
    draw_set_color(c_white)
    if ((ceil((string_width(chatText[chatSequence, chatNumber]))/490)) &gt; 1) {
        draw_roundrect(xPos - 125, yPos - 95 - (ceil((string_width(chatText[chatSequence, chatNumber]))/490) * 25), xPos + 125, (yPos - 92), false)
    } else {
        draw_roundrect((xPos - (string_width(chatText[chatSequence, chatNumber])/4) - 8), yPos - 95 - (ceil((string_width(chatText[chatSequence, chatNumber]))/490) * 25), (xPos + (string_width(chatText[chatSequence, chatNumber])/4) + 8), (yPos - 92), false)
    }
    //Drawing the Rectangle Around the Person Talking's Name
    draw_roundrect(xPos - (string_width(personTalking)*0.35/2) - 10, yPos - 95 - (ceil((string_width(chatText[chatSequence, chatNumber]))/490) * 25) - 3, xPos + (string_width(personTalking)*0.35/2) + 10, yPos - 95 - (ceil((string_width(chatText[chatSequence, chatNumber]))/490) * 25) - 17, false)
    draw_set_colour(c_black)
    draw_set_alpha(1)
    
    draw_text_transformed(xPos, yPos - 95 - (ceil((string_width(chatText[chatSequence, chatNumber]))/490) * 25) - 19, personTalking, 0.35, 0.35, 0)
    draw_text_ext_transformed(xPos, yPos - 95 - (ceil((string_width(chatText[chatSequence, chatNumber]))/490) * 25), chatText[chatSequence, chatNumber], 50, 490, 1/2, 1/2, 0)
}

/*
draw_set_alpha(0.75)
if (show) {
draw_set_color(c_white)
draw_rectangle(x - 48, y - 16 - (ceil(string_width(text)/192) * 20), x + 48, y - 16, false)
draw_set_alpha(1)
draw_set_color(c_black)
draw_rectangle(x - 48, y - 16 - (ceil(string_width(text)/192) * 20), x + 48, y - 16, true)
draw_set_halign(fa_center)
draw_set_font(fnt_old_formal)
//draw_text_transformed(x, y - 32, text, 0.75, 0.75, 0)
draw_text_ext_transformed(x, y - 16 - (ceil(string_width(text)/192) * 20), text, 30, 192, 0.5, 0.5, 0)
}
draw_set_alpha(1)
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
