<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fill</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_spawner</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//--Variables--\\

drawBack = false
invOpen = false
xPos = 0
drawInventory1 = false
drawInventory2 = false
displaying = false

globalvar maxInvSlots;
maxInvSlots = 5; //1 less than acual amounts
globalvar maxEquipmentSlots;
maxEquipmentSlots = 3 //1 less than actual amounts (Hat, Armor, Gloves, Boots
globalvar selectedSlot;
selectedSlot = 0;
globalvar equipmentSlot;
equipmentSlot = 0
globalvar totalItems;
totalItems = array_height_2d("items") + 1 //Equal to largest ID

//--Create Inventory Slots--\\

for(i = 0; i &lt;= maxInvSlots; i += 1) {
    global.inventory[i,0] = "";
    global.inventory[i, 1] = 0;
}

for (i = 0; i &lt;= 3; i++) {
    global.equipment[i, 0] = "";
}

//--Item Initialization--\\

/***Classes***\
    0 = Can't examine
    1 = Can examine
    2 = Key
    4 = Hat
    5 = Chestplate
    6 = Pants
    7 = Boots
\*************/
global.items[0, 0] = "Example Item" //Name of item
global.items[0, 1] = 0 //Class of item
global.items[0, 2] = 1 //Max Stack Size
global.items[0, 3] = obj_example_item //Item's Object Counterpart
global.items[0, 4] = spr_fill //Sprite of the item

global.items[1, 0] = "Scrap"
global.items[1, 1] = 2 //Scrap ID
global.items[1, 2] = 1
global.items[1, 3] = oItemScrap
global.items[1, 4] = sprMiniScrap
global.items[1, 5] = sprScrap //Large sprite if you can examine
global.items[1, 6] = "This is just test text on a piece of scrap." //Text to appear on screen
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawInventory1 = false
if (drawBack) {
    drawBack = false
    drawInventory2 = false
} else {
    drawInventory2 = true
}
drawBack = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drawInventory1) {
    if (!drawBack) {
        xPos += 3
    } else {
        xPos -= 3
    }
}

if (instance_exists(obj_player)) {
    if (obj_player.key_examine) {
        if (getItemClassByName(global.inventory[selectedSlot, 0]) == 2) {
            displaying = !displaying
            if (displaying) {
                
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drawInventory1) {
    draw_sprite(sprInventory, 0, xPos, 150)
    draw_set_color(c_dkgray)
    draw_rectangle(xPos - 66 + 1, 168 + 1 + (65 * selectedSlot), xPos - 1, 168 + 64 + (65 * selectedSlot), true)
    draw_rectangle(xPos - 66 + 2, 168 + 2 + (65 * selectedSlot), xPos - 2, 168 + 63 + (65 * selectedSlot), true)
    for (i = 0; i &lt;= maxInvSlots; i++) {
        if (global.inventory[i, 0] != "") {
            draw_sprite(getItemSpriteByName(global.inventory[i, 0]), 0, xPos - 33, 168 + 33 + (65 * i))
        }
    }
} else if (drawInventory2) {
    draw_sprite(sprInventory, 0, 65, 150)
    draw_set_color(c_dkgray)
    draw_rectangle(xPos - 66 + 1, 168 + 1 + (65 * selectedSlot), xPos - 1, 168 + 64 + (65 * selectedSlot), true)
    draw_rectangle(xPos - 66 + 2, 168 + 2 + (65 * selectedSlot), xPos - 2, 168 + 63 + (65 * selectedSlot), true)
    for (i = 0; i &lt;= maxInvSlots; i++) {
        if (global.inventory[i, 0] != "") {
            draw_sprite(getItemSpriteByName(global.inventory[i, 0]), 0, xPos - 33, 168 + 33 + (65 * i))
        }
    }
    draw_set_font(fnt_coders_crux_small)
    draw_set_color(c_white)
    draw_set_halign(fa_left)
    draw_text(xPos + 5, 168 + 33 + (65 * selectedSlot) - 10, global.inventory[selectedSlot, 0])
    
    if (global.items[getItemIDByName(global.inventory[selectedSlot, 0]), 1] == 2) {
        draw_text(xPos + 5, 168 + 33 + (65 * selectedSlot) + 10, "Press Q to examine")
    }
}

if (displaying) {
    draw_sprite(getItemAspectByName(5, global.inventory[selectedSlot, 0]), 0, view_wview/2, view_hview/2)
    draw_set_font(fnt_first_order)
    draw_set_color(c_dkbrown)
    draw_set_halign(fa_center)
    if (!is_undefined(getItemAspectByName(6, global.inventory[selectedSlot, 0]))) {
        draw_text_ext(view_wview/2, view_hview/2 - 200, getItemAspectByName(6, global.inventory[selectedSlot, 0]), 100, 600)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>debugPrint("Player Inventory:")
for (i = 0; i &lt;= maxInvSlots; i++) {
    if (global.inventory[i, 0] == "") {
        item = "Empty"
    } else {
        item = global.inventory[i, 0]
    }
    debugPrint("    Slot " + string(i) + ": " + item)
}

if (!drawInventory1 &amp;&amp; !drawInventory2) {
    drawInventory1 = true
    alarm[0] = 22
}

if (!drawInventory1 &amp;&amp; drawInventory2) {
    drawInventory1 = true
    drawBack = true
    alarm[0] = 22
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(vk_control)) {
if (!displaying) {
if (selectedSlot == 5) {
    selectedSlot = 0
} else {
    selectedSlot++
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(vk_control)) {
if (!displaying) {
if (selectedSlot == 0) {
    selectedSlot = 5
} else {
    selectedSlot--
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
